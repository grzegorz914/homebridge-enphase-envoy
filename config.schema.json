{
  "pluginAlias": "enphaseEnvoy",
  "pluginType": "platform",
  "singular": true,
  "fixArrays": true,
  "headerDisplay": "This plugin works with Enphase Photovoltaic. Devices are exposed to HomeKit as separate accessories and each needs to be manually paired.\n\n1. Open the Home <img src='https://user-images.githubusercontent.com/3979615/78010622-4ea1d380-738e-11ea-8a17-e6a465eeec35.png' height='16.42px'> app on your device.\n2. Tap the <img src='https://user-images.githubusercontent.com/3979615/78010869-9aed1380-738e-11ea-9644-9f46b3633026.png' height='16.42px'>.\n3. Tap *Add Accessory*, and select *I Don't Have a Code or Cannot Scan* or *More Options*.\n4. Select Your accessory and press add anyway.\n5. Enter the PIN or scan the QR code, this can be found in Homebridge UI or Homebridge logs.\n6. Complete the accessory setup.",
  "footerDisplay": "For documentation please see [GitHub repository](https://github.com/grzegorz914/homebridge-enphase-envoy).",
  "schema": {
    "type": "object",
    "properties": {
      "devices": {
        "title": "Devices",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "title": "Name",
              "type": "string",
              "placeholder": "Envoy-S",
              "description": "Here set the accessory `Name` to be displayed in `Homebridge/HomeKit`.",
              "required": true
            },
            "host": {
              "title": "IP/Hostname",
              "type": "string",
              "placeholder": "192.168.1.35",
              "format": "hostname",
              "description": "Here set the envoy `IP Address`/`Hostname` or leave empty (will be used default path `envoy.local`.",
              "required": false
            },
            "envoyFirmware7xx": {
              "title": "Firmware 7.x.x",
              "type": "boolean",
              "default": false,
              "required": true,
              "description": "This enable support for Envoy with firmware 7.x.x"
            },
            "enlightenUser": {
              "title": "Enlighten User",
              "type": "string",
              "description": "Here set the enlighten user name.",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === true;"
              }
            },
            "enlightenPasswd": {
              "title": "Enlighten Password",
              "type": "string",
              "description": "Here set the enlighten password.",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === true;"
              }
            },
            "envoySerialNumber": {
              "title": "Envoy Serial Number",
              "type": "string",
              "description": "Here set the envoy serial number.",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === true;"
              }
            },
            "envoyPasswd": {
              "title": "Envoy Password",
              "type": "string",
              "description": "Here set the envoy password (only if U already changed default password).",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === false;"
              }
            },
            "disableLogInfo": {
              "title": "Disable Log Info",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This disable log info, all values and state will not be displayed in Homebridge log console."
            },
            "disableLogDeviceInfo": {
              "title": "Disable Log Device Info",
              "type": "boolean",
              "default": false,
              "description": "This disable log device info by every connections device to the network.",
              "required": false
            },
            "enableDebugMode": {
              "title": "Debug",
              "type": "boolean",
              "default": false,
              "description": "This enable debug mode.",
              "required": false
            },
            "powerProductionSummary": {
              "title": "Power Summary",
              "type": "integer",
              "default": 0,
              "description": "Here set the power summary in (W) of all microinverters, based on this value will be calculate in % production level displayed in HomeKit.",
              "required": true
            },
            "powerProductionOnOff": {
              "title": "Power State",
              "type": "boolean",
              "default": false,
              "description": "This enable *Power State* monitoring for production and expose contact sensor in HomeKit.",
              "required": false
            },
            "powerProductionMax": {
              "title": "Power Peak",
              "type": "boolean",
              "default": false,
              "description": "This enable *Power Peak* monitoring for production and expose contact sensor in HomeKit.",
              "required": false
            },
            "powerProductionMaxAutoReset": {
              "title": "Power Peak Reset",
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0,
              "description": "Here select at which period of time the *Power Peak* will reset.",
              "oneOf": [
                {
                  "title": "None",
                  "enum": [
                    0
                  ]
                },
                {
                  "title": "Every Day",
                  "enum": [
                    1
                  ]
                },
                {
                  "title": "Every Week",
                  "enum": [
                    2
                  ]
                },
                {
                  "title": "Every Month",
                  "enum": [
                    3
                  ]
                }
              ],
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].powerProductionMax === true;"
              }
            },
            "powerProductionMaxDetected": {
              "title": "Power Peak Detected",
              "type": "integer",
              "default": 0,
              "description": "Here set *Power Peak Level* in (W) at which the contact sensor fired.",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].powerProductionMax === true;"
              }
            },
            "energyProductionStateSensor": {
              "title": "Energy State",
              "type": "boolean",
              "default": false,
              "description": "This enable *Energy State* monitoring for production and expose contact sensor in HomeKit.",
              "required": false
            },
            "energyProductionLevelSensor": {
              "title": "Energy Level",
              "type": "boolean",
              "default": false,
              "description": "This enable *Energy Level* monitoring for production and expose contact sensor in HomeKit.",
              "required": false
            },
            "energyProductionLevelDetected": {
              "title": "Energy Level Detected",
              "type": "integer",
              "default": 0,
              "description": "Here set *Energy Level* in (Wh)for production at which the contact sensor fired.",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].energyProductionLevelSensor === true;"
              }
            },
            "energyProductionLifetimeOffset": {
              "title": "Energy Lifetime Offset",
              "type": "integer",
              "default": 0,
              "description": "Here set *Offset* in (Wh) for energy production, if nedded.",
              "required": false
            },
            "powerConsumptionTotalMax": {
              "title": "Power Peak",
              "type": "boolean",
              "default": false,
              "description": "This enable *Power Peak* monitoring for consumption (Total) and expose contact sensor in HomeKit.",
              "required": false
            },
            "powerConsumptionTotalMaxAutoReset": {
              "title": "Power Peak Reset",
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0,
              "description": "Here select at which period of time the *Power Peak* will reset.",
              "oneOf": [
                {
                  "title": "None",
                  "enum": [
                    0
                  ]
                },
                {
                  "title": "Every Day",
                  "enum": [
                    1
                  ]
                },
                {
                  "title": "Every Week",
                  "enum": [
                    2
                  ]
                },
                {
                  "title": "Every Month",
                  "enum": [
                    3
                  ]
                }
              ],
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].powerConsumptionTotalMax === true;"
              }
            },
            "powerConsumptionTotalMaxDetected": {
              "title": "Power Peak Detected",
              "type": "integer",
              "default": 0,
              "description": "Here set *Power Peak Level* in (W) at which the contact sensor fired.",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].powerConsumptionTotalMax === true;"
              }
            },
            "energyConsumptionTotalLifetimeOffset": {
              "title": "Energy Lifetime Offset",
              "type": "integer",
              "default": 0,
              "description": "Here set *Offset* in (Wh) for energy consumption (Total), if nedded.",
              "required": false
            },
            "powerConsumptionNetMax": {
              "title": "Power Peak",
              "type": "boolean",
              "default": false,
              "description": "This enable *Power Peak* monitoring for consumption (Net) and expose contact sensor in HomeKit.",
              "required": false
            },
            "powerConsumptionNetMaxAutoReset": {
              "title": "Power Peak Reset",
              "type": "integer",
              "minimum": 0,
              "maximum": 3,
              "default": 0,
              "description": "Here select at which period of time the *Power Peak* will reset.",
              "oneOf": [
                {
                  "title": "None",
                  "enum": [
                    0
                  ]
                },
                {
                  "title": "Every Day",
                  "enum": [
                    1
                  ]
                },
                {
                  "title": "Every Week",
                  "enum": [
                    2
                  ]
                },
                {
                  "title": "Every Month",
                  "enum": [
                    3
                  ]
                }
              ],
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].powerConsumptionNetMax === true;"
              }
            },
            "powerConsumptionNetMaxDetected": {
              "title": "Power Peak Detected",
              "type": "integer",
              "default": 0,
              "description": "Here set *Power Peak Level* in (W) at which the contact sensor fired.",
              "required": false,
              "condition": {
                "functionBody": "return model.devices[arrayIndices].powerConsumptionNetMax === true;"
              }
            },
            "energyConsumptionNetLifetimeOffset": {
              "title": "Energy Lifetime Offset",
              "type": "integer",
              "default": 0,
              "description": "Here set *Offset* in (Wh) for energy consumption (Net), if nedded.",
              "required": false
            },
            "supportProductionPowerMode": {
              "title": "Power Mode",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable support to check/control production *Power Mode*, may not working with all envoy 7.x.x firmwares, if error occur, please disable it."
            },
            "supportPlcLevel": {
              "title": "PLC Level",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable support to check *PLC Level*."
            },
            "supportEnsembleStatus": {
              "title": "Ensemble Status",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable support to check *Ensemble Status*, may not working with all envoy firmwares, if error occur, please disable it.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === true;"
              }
            },
            "supportLiveData": {
              "title": "Live Data",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable support to check *Live Data*.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === true;"
              }
            },
            "liveDataRefreshTime": {
              "title": "Live Data Refresh Time",
              "type": "integer",
              "default": 1000,
              "minimum": 500,
              "maximum": 30000,
              "required": false,
              "description": "Here set *Live Data* refresh time in (ms).",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].envoyFirmware7xx === true && model.devices[arrayIndices].supportLiveData === true;"
              }
            },
            "metersDataRefreshTime": {
              "title": "Meters Refresh Time",
              "type": "integer",
              "default": 2500,
              "minimum": 500,
              "maximum": 30000,
              "required": false,
              "description": "Here set *Meters Data* refresh time in (ms)."
            },
            "productionDataRefreshTime": {
              "title": "Production Refresh Time",
              "type": "integer",
              "default": 5000,
              "minimum": 500,
              "maximum": 30000,
              "required": false,
              "description": "Here set *Production Data* rfresh time in (ms)."
            },
            "enableRestFul": {
              "title": "Enable",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable RESTful server."
            },
            "restFulDebug": {
              "title": "Debug",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable debug mode for RESTFul.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableRestFul === true;"
              }
            },
            "restFulPort": {
              "title": "Port",
              "type": "integer",
              "placeholder": 3000,
              "required": true,
              "description": "Here set the listening Port for RESTful server.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableRestFul === true;"
              }
            },
            "enableMqtt": {
              "title": "Enable",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable MQTT client."
            },
            "mqttDebug": {
              "title": "Debug",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable debug mode for MQTT.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttHost": {
              "title": "IP/Hostname",
              "type": "string",
              "placeholder": "ip or hostname",
              "required": true,
              "format": "hostname",
              "description": "Here set the IP/Hostname of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttPort": {
              "title": "Port",
              "type": "integer",
              "placeholder": 1883,
              "required": true,
              "description": "Here set the port of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttClientId": {
              "title": "Client ID",
              "type": "string",
              "placeholder": "client id",
              "required": false,
              "description": "Here optional set the Client ID of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true"
              }
            },
            "mqttPrefix": {
              "title": "Prefix",
              "type": "string",
              "placeholder": "home/envoy",
              "required": false,
              "description": "Here set the prefix.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttAuth": {
              "title": "Authorization",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "This enable authorization for MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true;"
              }
            },
            "mqttUser": {
              "title": "User",
              "type": "string",
              "placeholder": "user",
              "required": false,
              "description": "Here set the user of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true && model.devices[arrayIndices].mqttAuth === true;"
              }
            },
            "mqttPasswd": {
              "title": "Password",
              "type": "string",
              "placeholder": "password",
              "required": false,
              "description": "Here set the password of MQTT Broker.",
              "condition": {
                "functionBody": "return model.devices[arrayIndices].enableMqtt === true && model.devices[arrayIndices].mqttAuth === true;"
              }
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "key": "devices",
      "type": "tabarray",
      "title": "{{ value.name || 'new device' }}",
      "items": [
        "devices[].name",
        "devices[].host",
        {
          "key": "devices[]",
          "type": "section",
          "title": "Advanced Settings",
          "expandable": true,
          "expanded": false,
          "items": [
            {
              "key": "devices[]",
              "type": "tabarray",
              "title": "{{ value.title }}",
              "items": [
                {
                  "key": "devices[]",
                  "title": "Production",
                  "items": [
                    {
                      "key": "devices[]",
                      "type": "tabarray",
                      "title": "{{ value.title }}",
                      "items": [
                        {
                          "key": "devices[]",
                          "title": "Power",
                          "items": [
                            "devices[].powerProductionSummary",
                            "devices[].powerProductionOnOff",
                            "devices[].powerProductionMax",
                            "devices[].powerProductionMaxDetected",
                            "devices[].powerProductionMaxAutoReset"
                          ]
                        },
                        {
                          "key": "devices[]",
                          "title": "Energy",
                          "items": [
                            "devices[].energyProductionStateSensor",
                            "devices[].energyProductionLevelSensor",
                            "devices[].energyProductionLevelDetected",
                            "devices[].energyProductionLifetimeOffset"
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "key": "devices[]",
                  "title": "Consumption",
                  "items": [
                    {
                      "key": "devices[]",
                      "type": "tabarray",
                      "title": "{{ value.title }}",
                      "items": [
                        {
                          "key": "devices[]",
                          "title": "Total",
                          "items": [
                            {
                              "key": "devices[]",
                              "type": "tabarray",
                              "title": "{{ value.title }}",
                              "items": [
                                {
                                  "key": "devices[]",
                                  "title": "Power",
                                  "items": [
                                    "devices[].powerConsumptionTotalMax",
                                    "devices[].powerConsumptionTotalMaxDetected",
                                    "devices[].powerConsumptionTotalMaxAutoReset"
                                  ]
                                },
                                {
                                  "key": "devices[]",
                                  "title": "Energy",
                                  "items": [
                                    "devices[].energyConsumptionTotalLifetimeOffset"
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "key": "devices[]",
                          "title": "Net",
                          "items": [
                            {
                              "key": "devices[]",
                              "type": "tabarray",
                              "title": "{{ value.title }}",
                              "items": [
                                {
                                  "key": "devices[]",
                                  "title": "Power",
                                  "items": [
                                    "devices[].powerConsumptionNetMax",
                                    "devices[].powerConsumptionNetMaxDetected",
                                    "devices[].powerConsumptionNetMaxAutoReset"
                                  ]
                                },
                                {
                                  "key": "devices[]",
                                  "title": "Energy",
                                  "items": [
                                    "devices[].energyConsumptionNetLifetimeOffset"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "key": "devices[]",
                  "title": "Authorization",
                  "items": [
                    "devices[].envoyFirmware7xx",
                    "devices[].envoySerialNumber",
                    "devices[].enlightenUser",
                    "devices[].enlightenPasswd",
                    "devices[].envoyPasswd"
                  ]
                },
                {
                  "key": "devices[]",
                  "title": "System",
                  "items": [
                    "devices[].enableDebugMode",
                    "devices[].disableLogInfo",
                    "devices[].disableLogDeviceInfo",
                    "devices[].supportProductionPowerMode",
                    "devices[].supportPlcLevel",
                    "devices[].supportEnsembleStatus",
                    "devices[].supportLiveData",
                    "devices[].liveDataRefreshTime",
                    "devices[].metersDataRefreshTime",
                    "devices[].productionDataRefreshTime"
                  ]
                },
                {
                  "key": "devices[]",
                  "title": "External Integrations",
                  "items": [
                    {
                      "key": "devices[]",
                      "type": "tabarray",
                      "title": "{{ value.title }}",
                      "items": [
                        {
                          "key": "devices[]",
                          "title": "RESTFul",
                          "items": [
                            "devices[].enableRestFul",
                            "devices[].restFulDebug",
                            "devices[].restFulPort"
                          ]
                        },
                        {
                          "key": "devices[]",
                          "title": "MQTT",
                          "items": [
                            "devices[].enableMqtt",
                            "devices[].mqttDebug",
                            "devices[].mqttHost",
                            "devices[].mqttPort",
                            "devices[].mqttClientId",
                            "devices[].mqttPrefix",
                            "devices[].mqttAuth",
                            "devices[].mqttUser",
                            "devices[].mqttPasswd"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}